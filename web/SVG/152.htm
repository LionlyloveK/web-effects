<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<link rel="stylesheet" href="../common.css">
<style>
  .planProcess {
    width: 100%;
    height: 32%;
    background: rgba(6, 31, 43, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .planProcess .progress {
    display: flex;
    flex-direction: column;
    width: 48%;
    height: 70%;
    transform: rotateX(53deg);
  }

  .planProcess .progress circle {
    transform-origin: center;
    transform: rotate(-90deg);
    fill: none;
  }

  .planProcess .progress text {
    font-family: "Bahnschrift";
    text-anchor: middle;
    fill: white;
  }

  .planProcess .progress text tspan {
    font-size: 1.2rem;
  }
</style>

<body>
  <div class="planProcess" id="app">
    <div class="progress">
      <svg viewBox="0 0 100 100">
        <mask id="dailyMask">
          <!-- 用一个蒙版mask -->
          <circle cx="50" cy="50" r="35" :stroke-dasharray="dash(35)" stroke-width="12" stroke="white"></circle>
        </mask>
        <!-- 设置底部最大的圆环 -->
        <circle cx="50" cy="50" r="35" stroke-width="12" stroke="	#444A "></circle>
        <!-- 设置进度条的颜色、长度等，覆盖蒙版 -->
        <circle cx="50" cy="50" r="35" :stroke-dasharray="planCircle(plan.daily, plan.all, 35)" stroke-width="12" stroke="#4169E1" mask="url(#dailyMask)"></circle>
        <!-- 文字 -->
        <text x="50%" y="60%" style="font-size : 1.5rem">{{planPercent(plan.daily, plan.all)}}
          <tspan>%</tspan>
        </text>
      </svg>
    </div>
  </div>
</body>
<script>
  new Vue({
    el: "#app",
    data() {
      return {
        title: "工作进度",
        plan: {
          all: 100,
          daily: 74,
        },
      }
    },
    methods: {
      planPercent(var1, var2) {
        return (100 * var1 / var2).toFixed(0);
      },
      planCircle(var1, var2, r) {
        let girth = 2 * Math.PI * r;
        return (var1 / var2) * girth + ' ' + girth;
      },
      dash(r) {
        return r * 0.3 + ' ' + r * 0.1
      }
    }
  })
</script>

</html>